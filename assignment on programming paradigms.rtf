{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww28600\viewh15220\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs26 \cf0 Here are 
\f1\b five major programming paradigms
\f0\b0 , along with explanations and examples for each:\
\
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 1. Imperative Programming\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f2\b0\fs18 \cf0 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Core Idea:
\f0\b0  Code is written as a sequence of commands that change a program\'92s state step by step.\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 How It Works:
\f0\b0  You tell the computer 
\f3\i how
\f0\i0  to do something, using statements like loops, conditionals, and assignments.\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Examples:
\f0\b0  C, Python (partially), Java (partially)\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Key Concepts:
\f0\b0  Variables, control flow (if, for, while), procedures\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Example Code (C-style):
\f0\b0 \uc0\u8232 c\u8232 CopyEdit\u8232 \u8232 \u8232 int sum = 0;\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 for (int i = 1; i <= 10; i++) \{\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26     sum += i;\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \}\
\ls1\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \uc0\u8232 \u8232 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 2. Object-Oriented Programming (OOP)\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0
\f2\b0\fs18 \cf0 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Core Idea:
\f0\b0  Organizes code into "objects" that bundle data (attributes) and behavior (methods).\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 How It Works:
\f0\b0  Models real-world entities; promotes reuse through inheritance and encapsulation.\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Examples:
\f0\b0  Java, C++, Python, C#\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Key Concepts:
\f0\b0  Classes, objects, inheritance, polymorphism, encapsulation\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Example Code (Python):
\f0\b0 \uc0\u8232 python\u8232 CopyEdit\u8232 \u8232 \u8232 class Animal:\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26     def speak(self):\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26         print("Animal speaks")\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 class Dog(Animal):\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26     def speak(self):\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26         print("Bark!")\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 d = Dog()\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 d.speak()\
\ls2\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \uc0\u8232 \u8232 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 3. Functional Programming\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0
\f2\b0\fs18 \cf0 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Core Idea:
\f0\b0  Emphasizes computation using pure functions and avoids mutable state and side effects.\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 How It Works:
\f0\b0  You describe 
\f3\i what
\f0\i0  to compute, not how to do it.\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Examples:
\f0\b0  Haskell, Lisp, Elixir, Scala, JavaScript (partially)\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Key Concepts:
\f0\b0  First-class functions, immutability, higher-order functions, recursion\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Example Code (Haskell-style):
\f0\b0 \uc0\u8232 haskell\u8232 CopyEdit\u8232 \u8232 \u8232 sumList :: [Int] -> Int\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 sumList = foldr (+) 0\
\ls3\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 \uc0\u8232 \u8232 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 4. Logic Programming\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls4\ilvl0
\f2\b0\fs18 \cf0 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Core Idea:
\f0\b0  Uses formal logic to declare 
\f3\i what
\f0\i0  is true about a problem domain, and the engine figures out 
\f3\i how
\f0\i0  to derive solutions.\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 How It Works:
\f0\b0  You define facts and rules, and the program queries relationships.\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Examples:
\f0\b0  Prolog\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Key Concepts:
\f0\b0  Facts, rules, queries, unification, backtracking\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Example Code (Prolog):
\f0\b0 \uc0\u8232 prolog\u8232 CopyEdit\u8232 \u8232 \
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 parent(mary, susan).\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 ancestor(X, Y) :- parent(X, Y).\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 ancestor(X, Y) :- parent(X, Z), ancestor(Z, Y).\
\ls4\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f0\fs26 parent(John, Mary).\uc0\u8232 \u8232 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 5. Declarative Programming\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls5\ilvl0
\f2\b0\fs18 \cf0 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Core Idea:
\f0\b0  Focuses on 
\f3\i what
\f0\i0  the program should accomplish rather than detailing the control flow.\
\ls5\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 How It Works:
\f0\b0  Often overlaps with functional and logic paradigms; it abstracts away the 
\f3\i how
\f0\i0 .\
\ls5\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Examples:
\f0\b0  SQL, HTML, functional languages\
\ls5\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Key Concepts:
\f0\b0  Expression over instruction, no explicit state change\
\ls5\ilvl0
\f2\fs18 {\listtext	\uc0\u8226 	}
\f1\b\fs26 Example Code (SQL):
\f0\b0 \uc0\u8232 sql\u8232 CopyEdit\u8232 \
\pard\pardeftab560\partightenfactor0
\cf0 \
}